# -*- coding: utf-8 -*-
"""walls and gates leetcode.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BnA0SLdgFmFlHiBRlwsLUY6jBbYhBrrs
"""

from typing import (
    List,
)

class Solution:
    """
    @param rooms: m x n 2D grid
    @return: nothing
    """
    def walls_and_gates(self, rooms: List[List[int]]):
        # write your code here
        ROWS,COLS=len(rooms),len(rooms[0])
        directions=[[1,0],[0,1],[-1,0],[0,-1]]

        q=collections.deque()
        visit=set()
        for i in range(ROWS):
            for j in range(COLS):
                if rooms[i][j]==0:
                    q.append((i,j))
                    visit.add((i,j))

        while q:
            for _ in range(len(q)):#layer by layer (finish each layer completely before moving to the next one)
                row,col=q.popleft()



                for dr,dc in directions:
                    r,c=row+dr,col+dc
                    if r in range(ROWS) and c in range(COLS) and rooms[r][c]!=-1 and (r,c) not in visit:
                        q.append((r,c))
                        visit.add((r,c))
                        if rooms[r][c]>rooms[row][col]:
                            rooms[r][c]=rooms[row][col]+1


        return(rooms)